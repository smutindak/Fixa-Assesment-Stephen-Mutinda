name: E2E Tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  # Allow manual trigger
  workflow_dispatch:

jobs:
  FIXA-E2E-TESTS:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:v1.55.0-jammy
      # Using the official Microsoft Playwright Docker container with root permissions for GitHub Actions compatibility
      options: --ipc=host
    
    # Add concurrency to prevent multiple workflows running simultaneously
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        persist-credentials: false
    
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    
    - name: Install dependencies
      run: |
        # Install dependencies using clean install
        npm ci
        # No need to install browsers as they are pre-installed in the container
      
    - name: Create env file
      run: |
        touch .env
        echo "FIXA_USERNAME=${{ secrets.FIXA_USERNAME }}" >> .env
        echo "FIXA_PASSWORD=${{ secrets.FIXA_PASSWORD }}" >> .env
        
    - name: Run Playwright tests
      run: |
        npx playwright test --reporter=allure-playwright,line
      env:
        ALLURE_RESULTS_DIR: allure-results
        
    - name: Install Java in container
      if: always()
      run: |
        apt-get update
        apt-get install -y openjdk-17-jre-headless

    - name: Get Allure history
      uses: actions/checkout@v4
      if: always()
      continue-on-error: true
      with:
        ref: gh-pages
        path: gh-pages
        
    - name: Setup Allure history
      if: always()
      run: |
        mkdir -p allure-results/history
        mkdir -p allure-report
        
        if [ -d "gh-pages/history" ]; then
          echo "Found previous history"
          cp -r gh-pages/history/* allure-results/history/
        fi
        
    - name: Prepare Allure directories
      if: always()
      run: |
        rm -rf allure-report || true
        mkdir -p allure-results
        mkdir -p allure-report
        
    - name: Generate Allure Report
      if: always()
      run: |
        export JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64
        
        # Generate report with history
        npx allure generate allure-results --clean
        
        # Ensure history is preserved
        mkdir -p allure-report/history
        cp -r allure-results/history/* allure-report/history/ || true
        
        # Add build info
        echo "Build: #${{ github.run_number }}" >> allure-report/environment.properties
        echo "Branch: ${{ github.ref_name }}" >> allure-report/environment.properties
        echo "Time: $(date)" >> allure-report/environment.properties
        echo "Commit: ${{ github.sha }}" >> allure-report/environment.properties
        
        # Create history directory if deploying first time
        mkdir -p allure-report/history
        
    - name: Add environment info to report
      if: always()
      run: |
        echo '{
          "Browser": "Chromium",
          "Environment": "Staging",
          "URL": "https://app.staging.fixahr.com",
          "Branch": "${{ github.ref_name }}",
          "Commit": "${{ github.sha }}"
        }' > allure-results/environment.properties
        
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-reports
        path: |
          playwright-report/
          test-results/
          logs/
          allure-results/
          allure-report/
        retention-days: 30
        compression-level: 6
        
    - name: Cache Allure history
      if: always()
      uses: actions/cache@v3
      with:
        path: |
          allure-report/history
          allure-results/history
        key: allure-history-${{ github.run_number }}
        restore-keys: |
          allure-history-
        
    - name: Deploy Allure Report to GitHub Pages
      if: always()
      uses: peaceiris/actions-gh-pages@v3
      with:
        personal_token: ${{ secrets.GH_PAGES_TOKEN }}
        publish_dir: allure-report
        publish_branch: gh-pages
        keep_files: true
        full_commit_message: 'Deploy Allure Report for run #${{ github.run_number }} [skip ci]'
        enable_jekyll: false
        
    - name: Post Report URL
      if: always()
      run: |
        echo "Allure Report deployed to https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}"
        echo "View test history and trends in the Trends tab"
