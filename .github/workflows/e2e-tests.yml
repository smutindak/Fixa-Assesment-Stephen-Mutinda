name: E2E Tests

on:
  push:
    branches: [ master ]
    paths:
      - '**.ts'
      - '**.js'
      - 'package*.json'
      - '.github/workflows/**'
      - 'Dockerfile'
      - 'e2e-tests.yml'
  pull_request:
    branches: [ master ]
    paths:
      - '**.ts'
      - '**.js'
      - 'package*.json'
      - '.github/workflows/**'
      - 'Dockerfile'
  workflow_dispatch:

jobs:
  FIXA-E2E-TESTS:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}-${{ github.event.pull_request.number || github.sha }}
      cancel-in-progress: true
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Cache Docker images
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-
      
    - name: Pull and cache Playwright image
      uses: docker/build-push-action@v5
      with:
        pull: true
        push: false
        load: true
        tags: mcr.microsoft.com/playwright:v1.55.0-jammy
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
        
    - name: Move cache
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache
        
    - name: Create env file
      run: |
        cat << EOF > .env
        FIXA_USERNAME=${{ secrets.FIXA_USERNAME }}
        FIXA_PASSWORD=${{ secrets.FIXA_PASSWORD }}
        EOF
        
    - name: Setup test directories
      run: |
        mkdir -p playwright-report
        mkdir -p test-results
        mkdir -p logs
        chmod -R 777 playwright-report test-results logs
        
    - name: Run tests in Docker
      run: |
        docker run --rm \
          --ipc=host \
          --shm-size=2gb \
          -v ${{ github.workspace }}:/app \
          -w /app \
          --network host \
          mcr.microsoft.com/playwright:v1.55.0-jammy \
          /bin/bash -c "npm ci && npx playwright test --workers=2"
      env:
        CI: 'true'
        NODE_ENV: 'test'
      
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: playwright-report-${{ github.sha }}
        path: |
          playwright-report/
          test-results/
          logs/
        retention-days: 14
        compression-level: 9
        if-no-files-found: error
