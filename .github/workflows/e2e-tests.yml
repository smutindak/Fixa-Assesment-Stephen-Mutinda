name: E2E Tests

on:
  push:
    branches: [ master ]
    paths:
      - '**.ts'
      - '**.js'
      - 'package*.json'
      - '.github/workflows/**'
      - 'Dockerfile'
      - 'e2e-tests.yml'
  pull_request:
    branches: [ master ]
    paths:
      - '**.ts'
      - '**.js'
      - 'package*.json'
      - '.github/workflows/**'
      - 'Dockerfile'
  workflow_dispatch:

jobs:
  FIXA-E2E-TESTS:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}-${{ github.event.pull_request.number || github.sha }}
      cancel-in-progress: true
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Create env file
      run: |
        cat << EOF > .env
        FIXA_USERNAME=${{ secrets.FIXA_USERNAME }}
        FIXA_PASSWORD=${{ secrets.FIXA_PASSWORD }}
        EOF
        
    - name: Setup test directories
      run: |
        mkdir -p playwright-report
        mkdir -p test-results
        mkdir -p logs
        chmod -R 777 playwright-report test-results logs

    # Cache npm dependencies to avoid reinstalling in Docker
    - name: Cache Node modules
      uses: actions/cache@v4
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    # Cache Playwright Docker image
    - name: Cache Playwright Docker image
      uses: actions/cache@v4
      id: cache-docker
      with:
        path: /tmp/docker-save
        key: docker-playwright-v1.55.0-jammy-${{ runner.os }}
        restore-keys: |
          docker-playwright-v1.55.0-jammy-

    - name: Load Docker image from cache
      if: steps.cache-docker.outputs.cache-hit == 'true'
      run: |
        echo "Loading cached Docker image..."
        docker load < /tmp/docker-save/playwright.tar

    - name: Pull and save Docker image
      if: steps.cache-docker.outputs.cache-hit != 'true'
      run: |
        mkdir -p /tmp/docker-save
        echo "Pulling fresh Playwright image..."
        docker pull mcr.microsoft.com/playwright:v1.55.0-jammy
        echo "Saving Docker image to cache..."
        docker save mcr.microsoft.com/playwright:v1.55.0-jammy > /tmp/docker-save/playwright.tar
        echo "Image saved. File size:"
        ls -lh /tmp/docker-save/playwright.tar
        
    - name: Run tests in Docker
      run: |
        docker run --rm \
          --ipc=host \
          --shm-size=2gb \
          -v ${{ github.workspace }}:/app \
          -w /app \
          --network host \
          mcr.microsoft.com/playwright:v1.55.0-jammy \
          /bin/bash -c "npm ci && npx playwright test --workers=2"
      env:
        CI: 'true'
        NODE_ENV: 'test'
      
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: playwright-report-${{ github.sha }}
        path: |
          playwright-report/
          test-results/
          logs/
        retention-days: 14
        compression-level: 9
        if-no-files-found: error