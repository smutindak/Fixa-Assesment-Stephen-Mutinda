name: E2E Tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  # Allow manual trigger
  workflow_dispatch:

jobs:
  FIXA-E2E-Tests:
    timeout-minutes: 30
    runs-on: alpine-latest
    # Add concurrency to prevent multiple workflows running simultaneously
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Install Alpine dependencies
      run: |
        apk add --no-cache \
          chromium \
          nss \
          freetype \
          freetype-dev \
          ttf-freefont \
          font-noto-emoji \
          wqy-zenhei
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    # Cache version control
    - name: Get Date
      id: get-date
      run: |
        echo "date=$(date +'%Y-%m')" >> $GITHUB_OUTPUT
      shell: bash

    # Improved caching strategy with versioning
    - name: Cache dependencies
      id: cache-deps
      uses: actions/cache@v3
      with:
        path: |
          **/node_modules
          ~/.cache/ms-playwright
          ~/.npm
        key: ${{ runner.os }}-deps-${{ steps.get-date.outputs.date }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-deps-${{ steps.get-date.outputs.date }}-
          ${{ runner.os }}-deps-
        
    # Cache cleanup for old caches
    - name: Cleanup old caches
      if: github.ref == 'refs/heads/master'
      run: |
        gh extension install actions/gh-actions-cache
        
        # Get all cache keys
        CACHE_KEYS=$(gh actions-cache list -R ${{ github.repository }} | grep -oP '${{ runner.os }}-deps-\d{4}-\d{2}' | sort -u)
        
        # Keep only the latest 2 monthly caches
        echo "$CACHE_KEYS" | head -n -2 | while read key; do
          gh actions-cache delete "$key" -R ${{ github.repository }} --confirm
        done
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Install dependencies
      if: steps.cache-deps.outputs.cache-hit != 'true'
      run: |
        npm ci
        npx playwright install --with-deps chromium
      # Skip installation if cache hit
      
    - name: Create env file
      run: |
        touch .env
        echo "FIXA_USERNAME=${{ secrets.FIXA_USER }}" >> .env
        echo "FIXA_PASSWORD=${{ secrets.FIXA_PASS }}" >> .env
        
    - name: Run Playwright tests
      run: npx playwright test
      
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: playwright-report
        path: |
          playwright-report/
          test-results/
          logs/
        retention-days: 30
        compression-level: 6 # New feature in v4 for better compression
